{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","components/store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","useState","setToken","logoutHander","removeItem","contextValue","expirationTime","setItem","remainingTime","currentTime","Date","getTime","calcRemainingTime","setTimeout","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.37fb96e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__3SRs8\",\"control\":\"ProfileForm_control__1fweX\",\"action\":\"ProfileForm_action__16J4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__sivIM\",\"logo\":\"MainNavigation_logo__3brse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__28lsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3zSlU\"};","import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n\ttoken: '',\r\n\tisLoggedIn: false,\r\n\tlogin: (token) => {},\r\n\tlogout: () => {},\r\n});\r\n\r\nconst calcRemainingTime = (expirationTime) => {\r\n\tconst currentTime = new Date().getTime();\r\n\tconst adjExpirationTime = new Date(expirationTime).getTime();\r\n\t\r\n\tconst remainingTime = adjExpirationTime - currentTime;\r\n\r\n\treturn remainingTime;\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\tconst initialToken = localStorage.getItem('token')\r\n\tconst [token, setToken] = useState(initialToken);\r\n\r\n\tconst userIsLoggedIn = !!token;\r\n\t\r\n\tconst logoutHander = () => {\r\n\t\tsetToken(null);\r\n\t\tlocalStorage.removeItem('token', token);\r\n\t};\r\n\r\n\tconst loginHandler = (token, expirationTime) => {\r\n\t\tsetToken(token);\r\n\t\tlocalStorage.setItem('token', token);\r\n\r\n\t\tconst remainingTime = calcRemainingTime(expirationTime);\r\n\r\n\t\tsetTimeout(logoutHander, remainingTime);\r\n\t};\r\n\r\n\tconst contextValue = {\r\n\t\ttoken: token,\r\n\t\tisLoggedIn: userIsLoggedIn,\r\n\t\tlogin: loginHandler,\r\n\t\tlogout: logoutHander,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider value={contextValue}>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n\tconst authCtx = useContext(AuthContext);\n\n\tconst logoutHandler = () => {\n\t\tauthCtx.logout();\n\t}\n\n\treturn (\n\t\t<header className={classes.header}>\n\t\t\t<Link to='/'>\n\t\t\t\t<div className={classes.logo}>React Auth</div>\n\t\t\t</Link>\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t{!authCtx.isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/auth'>Login</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{authCtx.isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/profile'>Profile</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{authCtx.isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<button onClick={logoutHandler}>Logout</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</header>\n\t);\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n\tconst history = useHistory();\n\tconst newPasswordInputRef = useRef();\n\tconst authCtx = useContext(AuthContext);\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredNewPassword = newPasswordInputRef.current.value;\n\n\t\t// add validate\n\n\t\tfetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyAoFi3e8-mTtwVKGBrRn7KMJEdZy2GNnfY',\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tidToken: authCtx.token,\n\t\t\t\tpassword: enteredNewPassword,\n\t\t\t\treturnSecureToken: false,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t}\n\t\t}).then(res => {\n\t\t\t// assumed success\n\t\t\thistory.replace('/');\n\n\t\t})\n\t}\n\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={ submitHandler } >\n\t\t\t<div className={classes.control}>\n\t\t\t\t<label htmlFor='new-password'>New Password</label>\n\t\t\t\t<input type='password' id='new-password' minLength='7' ref={ newPasswordInputRef } />\n\t\t\t</div>\n\t\t\t<div className={classes.action}>\n\t\t\t\t<button>Change Password</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../store/auth-context';\nimport classes from './AuthForm.module.css';\n// import useHTTP from '../../hooks/use-http';\n\nconst AuthForm = () => {\n\tconst history = useHistory();\n\tconst emailInputRef = useRef();\n\tconst passwordInputRef = useRef();\n\n\tconst authCtx = useContext(AuthContext);\n\n\tconst [isLogin, setIsLogin] = useState(true);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\t// useHTTP({url:'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAoFi3e8-mTtwVKGBrRn7KMJEdZy2GNnfY'})\n\n\tconst switchAuthModeHandler = () => {\n\t\tsetIsLogin((prevState) => !prevState);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredEmail = emailInputRef.current.value;\n\t\tconst enteredPassword = passwordInputRef.current.value;\n\n\t\t// add validation\n\n\t\tsetIsLoading(true);\n\t\tlet url;\n\n\n\t\tif (isLogin) {\n\t\t\turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAoFi3e8-mTtwVKGBrRn7KMJEdZy2GNnfY'\n\n\t\t} else {\n\t\t\turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAoFi3e8-mTtwVKGBrRn7KMJEdZy2GNnfY'\n\t\t}\n\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: enteredEmail,\n\t\t\t\tpassword: enteredPassword,\n\t\t\t\treturnSecureToken: true\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tsetIsLoading(false);\n\t\t\tif (res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\treturn res.json().then((data) => {\n\t\t\t\t\tlet errorMessage = 'Authentication Failed!';\n\t\t\t\t\t// if (data && data.error && data.error.message) {\n\t\t\t\t\t// \terrorMessage = data.error.message;\n\t\t\t\t\t// }\n\t\t\t\t\tthrow new Error(errorMessage);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t.then((data) => {\n\t\t\tconst expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000));\n\n\t\t\tauthCtx.login(data.idToken, expirationTime.toISOString());\n\t\t\thistory.replace('/')\n\t\t})\n\t\t.catch((err) => {\n\t\t\talert(err.message);\n\t\t});\n\t}\n\n\treturn (\n\t\t<section className={classes.auth}>\n\t\t\t<h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='email'>Your Email</label>\n\t\t\t\t\t<input type='email' id='email' required ref={emailInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='password'>Your Password</label>\n\t\t\t\t\t<input type='password' id='password' required ref={passwordInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t{!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n\t\t\t\t\t{isLoading && <p>Sending Request...</p>}\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tclassName={classes.toggle}\n\t\t\t\t\t\tonClick={switchAuthModeHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLogin ? 'Create new account' : 'Login with existing account'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t);\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthContext from './components/store/auth-context';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n\tconst authCtx = useContext(AuthContext);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t<HomePage />\n\t\t\t\t</Route>\n\t\t\t\t{!authCtx.isLoggedIn && (\n\t\t\t\t\t<Route path='/auth'>\n\t\t\t\t\t\t<AuthPage />\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t\t{authCtx.isLoggedIn && (\n\t\t\t\t\t<Route path='/profile'>\n\t\t\t\t\t\t<UserProfile />\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t\t<Route path='*'>\n\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './components/store/auth-context';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\t<AuthContextProvider>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1_ygJ\",\"control\":\"AuthForm_control__1_n7V\",\"actions\":\"AuthForm_actions__2U8dW\",\"toggle\":\"AuthForm_toggle__2Fd6Z\"};"],"sourceRoot":""}