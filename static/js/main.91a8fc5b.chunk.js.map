{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","components/store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","hooks/use-http.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calcRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","url","response","ok","Error","json","data","message","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","sendLoginRequest","saveToken","expiresIn","toISOString","handleError","err","alert","submitHandler","enteredEmail","enteredPassword","email","catch","auth","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render","basename","process"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,yB,qBCAjID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,QAAU,6BAA6B,OAAS,4B,qBCAnGD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6B,qBCAjED,EAAOC,QAAU,CAAC,QAAU,6B,qBCA5BD,EAAOC,QAAU,CAAC,SAAW,sC,kECCzBC,E,qEAGEC,EAAcC,IAAMC,cAAc,CACvCC,MAAO,GACPC,YAAY,EACZC,MAAO,SAACF,GAAY,EACpBG,OAAQ,WAAQ,IAOXC,EAAoB,SAACC,GAC1B,IAAMC,GAAc,IAAIC,MAAOC,UAK/B,OAJ0B,IAAID,KAAKF,GAAgBG,UAETF,CAG3C,EAyBaG,EAAsB,SAACC,GACnC,IACIC,EADEC,EAvBqB,WAC3B,IAAMC,EAAcC,aAAaC,QAAQ,SACnCC,EAAuBF,aAAaC,QAAQ,kBAE5CE,EAAgBb,EAAkBY,GAExC,OAAIC,GAAiB,KACpBH,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,kBACjB,MAGD,CACNlB,MAAOa,EACPM,SAAUF,EAEZ,CAOmBG,GAEdR,IACHD,EAAeC,EAAUZ,OAE1B,MAA0BqB,mBAASV,GAAa,mBAAzCX,EAAK,KAAEsB,EAAQ,KAEhBC,IAAmBvB,EAEnBwB,EAAgBC,uBAAY,WACjCH,EAAS,MACTR,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,kBAExBtB,GAAe8B,aAAa9B,EAC7B,GAAG,IAYH+B,qBAAU,WACLf,IACHhB,EAAcgC,WAAWJ,EAAeZ,EAAUO,UAEpD,GAAG,CAACP,EAAWY,IAGf,IAAMK,EAAe,CACpB7B,MAAOA,EACPC,WAAYsB,EACZrB,MApBoB,SAACF,EAAOK,GAC5BiB,EAAStB,GACTc,aAAagB,QAAQ,QAAS9B,GAC9Bc,aAAagB,QAAQ,iBAAkBzB,GAEvC,IAAMY,EAAgBb,EAAkBC,GAExCT,EAAcgC,WAAWJ,EAAeP,EACzC,EAaCd,OAAQqB,GAIT,OACC,cAAC3B,EAAYkC,SAAQ,CAACC,MAAOH,EAAa,SACxCnB,EAAMuB,UAGV,EAEepC,I,iBCzDAqC,EAnCQ,WACtB,IAAMC,EAAUC,qBAAWvC,GAM3B,OACC,yBAAQwC,UAAWC,IAAQC,OAAO,UACjC,cAAC,IAAI,CAACC,GAAG,IAAG,SACX,qBAAKH,UAAWC,IAAQG,KAAK,0BAE9B,8BACC,gCACGN,EAAQlC,YACT,6BACC,cAAC,IAAI,CAACuC,GAAG,QAAO,qBAGjBL,EAAQlC,YACR,6BACC,cAAC,IAAI,CAACuC,GAAG,WAAU,uBAGpBL,EAAQlC,YACR,6BACC,wBAAQyC,QAvBQ,WACrBP,EAAQhC,QACT,EAqBqC,6BAOtC,EC1BewC,EATA,SAACjC,GACd,OACE,eAAC,WAAQ,WACP,cAAC,EAAc,IACf,+BAAOA,EAAMuB,aAGnB,E,iBCuCeW,EA5CK,WACnB,IAAMC,EAAUC,cACVC,EAAsBC,mBACtBb,EAAUC,qBAAWvC,GA4B3B,OACC,uBAAMwC,UAAWC,IAAQW,KAAMC,SA3BV,SAACC,GACtBA,EAAMC,iBAEN,IAAMC,EAAqBN,EAAoBO,QAAQtB,MAIvDuB,MAAM,wGACN,CACCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACpBC,QAASzB,EAAQnC,MACjB6D,SAAUR,EACVS,mBAAmB,IAEpBC,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GAEPpB,EAAQqB,QAAQ,IAEjB,GACD,EAI0D,UACxD,sBAAK7B,UAAWC,IAAQ6B,QAAQ,UAC/B,uBAAOC,QAAQ,eAAc,0BAC7B,uBAAOC,KAAK,WAAWC,GAAG,eAAeC,UAAU,IAAIC,IAAMzB,OAE9D,qBAAKV,UAAWC,IAAQmC,OAAO,SAC9B,yDAIJ,E,iBCpCeC,EATK,WAClB,OACE,0BAASrC,UAAWC,IAAQqC,QAAQ,UAClC,mDACA,cAAC,EAAW,MAGlB,E,iCC2BeC,EAnCC,WACf,MAAkCvD,oBAAS,GAAM,mBAA1CwD,EAAS,KAAEC,EAAY,KAC9B,EAA0BzD,mBAAS,MAAK,mBAAjC0D,EAAK,KAAEC,EAAQ,KAEhBC,EAAcxD,sBAAW,iDAAC,WAAOyD,EAAeC,GAAS,mFAE/C,OADfL,GAAa,GACbE,EAAS,MAAM,kBAGSzB,MAAM2B,EAAcE,IAAK,CAC/C5B,OAAQ0B,EAAc1B,OAAS0B,EAAc1B,OAAS,MACtDO,QAASmB,EAAcnB,QAAUmB,EAAcnB,QAAU,CAAC,EAC1DN,KAAMyB,EAAczB,KAAOC,KAAKC,UAAUuB,EAAczB,MAAQ,OAC9D,KAAD,EAJY,IAAR4B,EAAQ,QAMAC,GAAG,CAAD,qBACT,IAAIC,MAAM,mBAAmB,KAAD,mBAGhBF,EAASG,OAAO,KAAD,GAA5BC,EAAI,OACVN,EAAUM,GAAM,kDAGhBT,EAAS,KAAIU,SAAW,yBAAyB,QAElDZ,GAAa,GAAO,0DACpB,qDAtB8B,GAsB7B,IAEF,MAAO,CACND,YACAE,QACAE,cAEF,ECoDeU,EAhFE,WAChB,IAAM9C,EAAUC,cACV8C,EAAgB5C,mBAChB6C,EAAmB7C,mBAEnBb,EAAUC,qBAAWvC,GAE3B,EAA8BwB,oBAAS,GAAK,mBAArCyE,EAAO,KAAEC,EAAU,KAE1B,EAA4DnB,IAApDC,EAAS,EAATA,UAA+BmB,GAAf,EAALjB,MAAoC,EAA7BE,aAMpBgB,EAAY,SAACR,GAClB,IAAMpF,EAAiB,IAAIE,MAAK,IAAIA,MAAOC,UAA+B,KAAjBiF,EAAKS,WAC9D/D,EAAQjC,MAAMuF,EAAK7B,QAASvD,EAAe8F,eAC3CtD,EAAQqB,QAAQ,IACjB,EAEMkC,EAAc,SAACC,GACpBC,MAAMD,EACP,EAEME,EAAa,iDAAG,WAAOpD,GAAK,qFAU+E,OAThHA,EAAMC,iBAEAoD,EAAeZ,EAActC,QAAQtB,MACrCyE,EAAkBZ,EAAiBvC,QAAQtB,MAKvCoD,EAAVU,EAAgB,oHACP,wGAAuG,SAE1GE,EAAiB,CACtBZ,MACA5B,OAAQ,OACRC,KAAM,CACLiD,MAAOF,EACP3C,SAAU4C,EACV3C,mBAAmB,GAEpBC,QAAS,CACR,eAAgB,qBAEfkC,GACFU,MAAMP,GAAY,2CACnB,gBAzBkB,sCA2BnB,OACC,0BAAS/D,UAAWC,IAAQsE,KAAK,UAChC,6BAAKd,EAAU,QAAU,YACzB,uBAAM5C,SAAUqD,EAAc,UAC7B,sBAAKlE,UAAWC,IAAQ6B,QAAQ,UAC/B,uBAAOC,QAAQ,QAAO,wBACtB,uBAAOC,KAAK,QAAQC,GAAG,QAAQuC,UAAQ,EAACrC,IAAKoB,OAE9C,sBAAKvD,UAAWC,IAAQ6B,QAAQ,UAC/B,uBAAOC,QAAQ,WAAU,2BACzB,uBAAOC,KAAK,WAAWC,GAAG,WAAWuC,UAAQ,EAACrC,IAAKqB,OAEpD,sBAAKxD,UAAWC,IAAQwE,QAAQ,WAC7BjC,GAAa,iCAASiB,EAAU,QAAU,mBAC3CjB,GAAa,mDACd,wBACCR,KAAK,SACLhC,UAAWC,IAAQyE,OACnBrE,QA3DyB,WAC7BqD,GAAW,SAACiB,GAAS,OAAMA,CAAS,GACrC,EAyDoC,SAE9BlB,EAAU,qBAAuB,wCAMxC,EC/EemB,EAJE,WACf,OAAO,cAAC,EAAQ,GAClB,E,iBCMeC,EARa,WAC1B,OACE,yBAAS7E,UAAWC,IAAQ6E,SAAS,SACnC,oDAGN,ECFeC,EAJE,WACf,OAAO,cAAC,EAAmB,GAC7B,ECgCeC,MA3Bf,WACC,IAAMlF,EAAUC,qBAAWvC,GAE3B,OACC,cAAC,EAAM,UACN,eAAC,IAAM,WACN,cAAC,IAAK,CAACyH,KAAK,IAAIC,OAAK,WACpB,cAAC,EAAQ,OAERpF,EAAQlC,YACT,cAAC,IAAK,CAACqH,KAAK,QAAO,SAClB,cAAC,EAAQ,MAGVnF,EAAQlC,YACR,cAAC,IAAK,CAACqH,KAAK,WAAU,SACrB,cAAC,EAAW,MAGd,cAAC,IAAK,CAACA,KAAK,IAAG,SACd,cAAC,IAAQ,CAAC9E,GAAG,YAKlB,EC3BagF,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACJ,cAAC,EAAmB,UACnB,cAAC,IAAa,CAACC,SAAUC,cAAuB,SAC/C,cAAC,EAAG,Q","file":"static/js/main.91a8fc5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1_ygJ\",\"control\":\"AuthForm_control__1_n7V\",\"actions\":\"AuthForm_actions__2U8dW\",\"toggle\":\"AuthForm_toggle__2Fd6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__3SRs8\",\"control\":\"ProfileForm_control__1fweX\",\"action\":\"ProfileForm_action__16J4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__sivIM\",\"logo\":\"MainNavigation_logo__3brse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__28lsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3zSlU\"};","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\n// THE Context object provided to everything else\r\nconst AuthContext = React.createContext({\r\n\ttoken: '',  // Firebase auth token\r\n\tisLoggedIn: false, // Conditional Rendering flag + lil derivitive logic\r\n\tlogin: (token) => { },\r\n\tlogout: () => { },\r\n});\r\n\r\n/* Calc time left on Auth Token\r\n\tSTRING: expirationTime\r\n\t1hr added onto time token recieved in ms, for conversion into dates for timer\r\n*/\r\nconst calcRemainingTime = (expirationTime) => {\r\n\tconst currentTime = new Date().getTime();\r\n\tconst adjExpirationTime = new Date(expirationTime).getTime(); // translate string into date, get ms\r\n\r\n\tconst remainingTime = adjExpirationTime - currentTime; // Return RemainingTime\r\n\r\n\treturn remainingTime;\r\n}\r\n\r\n/* Check if user already logged in */\r\nconst retrieveStoredToken = () => {\r\n\tconst storedToken = localStorage.getItem('token');\r\n\tconst storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n\tconst remainingTime = calcRemainingTime(storedExpirationDate); // check duration on last token\r\n\r\n\tif (remainingTime <= 30000) { // if less than 1min left, delete old token\r\n\t\tlocalStorage.removeItem('token');\r\n\t\tlocalStorage.removeItem('expirationTime')\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {\r\n\t\ttoken: storedToken,\r\n\t\tduration: remainingTime,\r\n\t}\r\n}\r\n\r\n\r\n/* Wrapper function\r\n\tProvides Context object to the app via Wrapping children with context.provider \r\n*/\r\nexport const AuthContextProvider = (props) => {\r\n\tconst tokenData = retrieveStoredToken(); // Check if token\r\n\tlet initialToken;\r\n\tif (tokenData) {\r\n\t\tinitialToken = tokenData.token; // if logged in already, stay logged in\r\n\t}\r\n\tconst [token, setToken] = useState(initialToken); // either existing token or undefined\r\n\r\n\tconst userIsLoggedIn = !!token;\r\n\r\n\tconst logoutHandler = useCallback(() => {\r\n\t\tsetToken(null);\r\n\t\tlocalStorage.removeItem('token');\r\n\t\tlocalStorage.removeItem('expirationTime')\r\n\r\n\t\tlogoutTimer && clearTimeout(logoutTimer);\r\n\t}, []);\r\n\r\n\tconst loginHandler = (token, expirationTime) => {\r\n\t\tsetToken(token);\r\n\t\tlocalStorage.setItem('token', token);\r\n\t\tlocalStorage.setItem('expirationTime', expirationTime)\r\n\r\n\t\tconst remainingTime = calcRemainingTime(expirationTime);\r\n\r\n\t\tlogoutTimer = setTimeout(logoutHandler, remainingTime);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tokenData) {\r\n\t\t\tlogoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n\t\t}\r\n\t}, [tokenData, logoutHandler]);\r\n\r\n\t// Assign Context object Values to provide to app\r\n\tconst contextValue = {\r\n\t\ttoken: token,\r\n\t\tisLoggedIn: userIsLoggedIn,\r\n\t\tlogin: loginHandler,\r\n\t\tlogout: logoutHandler,\r\n\t};\r\n\r\n\t// Wrap it\r\n\treturn (\r\n\t\t<AuthContext.Provider value={contextValue}>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n\tconst authCtx = useContext(AuthContext);\n\n\tconst logoutHandler = () => {\n\t\tauthCtx.logout();\n\t}\n\n\treturn (\n\t\t<header className={classes.header}>\n\t\t\t<Link to='/'>\n\t\t\t\t<div className={classes.logo}>React Auth</div>\n\t\t\t</Link>\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t{!authCtx.isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/auth'>Login</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{authCtx.isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/profile'>Profile</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{authCtx.isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<button onClick={logoutHandler}>Logout</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</header>\n\t);\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n\tconst history = useHistory();\n\tconst newPasswordInputRef = useRef();\n\tconst authCtx = useContext(AuthContext);\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredNewPassword = newPasswordInputRef.current.value;\n\n\t\t// add validate\n\n\t\tfetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyAoFi3e8-mTtwVKGBrRn7KMJEdZy2GNnfY',\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tidToken: authCtx.token,\n\t\t\t\tpassword: enteredNewPassword,\n\t\t\t\treturnSecureToken: false,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t}\n\t\t}).then(res => {\n\t\t\t// assumed success\n\t\t\thistory.replace('/');\n\n\t\t})\n\t}\n\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={ submitHandler } >\n\t\t\t<div className={classes.control}>\n\t\t\t\t<label htmlFor='new-password'>New Password</label>\n\t\t\t\t<input type='password' id='new-password' minLength='7' ref={ newPasswordInputRef } />\n\t\t\t</div>\n\t\t\t<div className={classes.action}>\n\t\t\t\t<button>Change Password</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst sendRequest = useCallback(async (requestConfig, applyData) => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\r\n\t\ttry { \r\n\t\t\tconst response = await fetch(requestConfig.url, {\r\n\t\t\t\tmethod: requestConfig.method ? requestConfig.method : 'GET',\r\n\t\t\t\theaders: requestConfig.headers ? requestConfig.headers : {},\r\n\t\t\t\tbody: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('Request Failed!');\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tapplyData(data);\r\n\r\n\t\t} catch(err) {\r\n\t\t\tsetError(err.message || 'Something went wrong!');\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t},[])\r\n\r\n\treturn {\r\n\t\tisLoading,\r\n\t\terror,\r\n\t\tsendRequest,\r\n\t}\r\n};\r\n\r\nexport default useHttp;","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport useHttp from '../../hooks/use-http';\n\nconst AuthForm = () => {\n\tconst history = useHistory();\n\tconst emailInputRef = useRef();\n\tconst passwordInputRef = useRef();\n\n\tconst authCtx = useContext(AuthContext);\n\n\tconst [isLogin, setIsLogin] = useState(true);\n\t// const [isLoading, setIsLoading] = useState(false);\n\tconst { isLoading, error, sendRequest: sendLoginRequest } = useHttp();\n\n\tconst switchAuthModeHandler = () => {\n\t\tsetIsLogin((prevState) => !prevState);\n\t};\n\n\tconst saveToken = (data) => {\n\t\tconst expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000));\n\t\tauthCtx.login(data.idToken, expirationTime.toISOString());\n\t\thistory.replace('/')\n\t}\n\n\tconst handleError = (err) => {\n\t\talert(err);\n\t}\n\n\tconst submitHandler = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredEmail = emailInputRef.current.value;\n\t\tconst enteredPassword = passwordInputRef.current.value;\n\n\t\t// add validation\n\n\t\tlet url;\n\t\tisLogin ? url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAoFi3e8-mTtwVKGBrRn7KMJEdZy2GNnfY'\n\t\t\t: url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAoFi3e8-mTtwVKGBrRn7KMJEdZy2GNnfY'\n\n\t\tawait sendLoginRequest({\n\t\t\turl,\n\t\t\tmethod: 'POST',\n\t\t\tbody: {\n\t\t\t\temail: enteredEmail,\n\t\t\t\tpassword: enteredPassword,\n\t\t\t\treturnSecureToken: true\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t}, saveToken)\n\t\t.catch(handleError)\n\t}\n\n\treturn (\n\t\t<section className={classes.auth}>\n\t\t\t<h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='email'>Your Email</label>\n\t\t\t\t\t<input type='email' id='email' required ref={emailInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='password'>Your Password</label>\n\t\t\t\t\t<input type='password' id='password' required ref={passwordInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t{!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n\t\t\t\t\t{isLoading && <p>Sending Request...</p>}\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tclassName={classes.toggle}\n\t\t\t\t\t\tonClick={switchAuthModeHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLogin ? 'Create new account' : 'Login with existing account'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t);\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthContext from './components/store/auth-context';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n\tconst authCtx = useContext(AuthContext);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t<HomePage />\n\t\t\t\t</Route>\n\t\t\t\t{!authCtx.isLoggedIn && (\n\t\t\t\t\t<Route path='/auth'>\n\t\t\t\t\t\t<AuthPage />\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t\t{authCtx.isLoggedIn && (\n\t\t\t\t\t<Route path='/profile'>\n\t\t\t\t\t\t<UserProfile />\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t\t<Route path='*'>\n\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './components/store/auth-context';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\t<AuthContextProvider>\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</AuthContextProvider>\n);\n"],"sourceRoot":""}